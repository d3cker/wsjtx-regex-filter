name: Build dev packages
on:
  push:
    tags-ignore:
      - '**'
    branches:
      - 'windows'

jobs:
  download_wsjtx:
    runs-on: ubuntu-latest
    steps:
      - name: Downlaod source code
        run: wget https://wsjt.sourceforge.io/downloads/wsjtx-2.6.1.tgz

      - name: Save WSJTX for next jobs
        uses: actions/upload-artifact@v2
        with:
          name: wsjtx-source-code
          path: wsjtx-2.6.1.tgz


  patch_source:
    needs: ['download_wsjtx']
    runs-on: ubuntu-latest
    steps:
      - name: cleanup #https://github.com/actions/checkout/issues/211
        run: |
          sudo chown -R $USER:$USER $GITHUB_WORKSPACE

      - name: Get source code
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: wsjtx-source-code

      - name: Unpack the source
        run: mkdir unpack && pwd && ls -l && tar -xzvf wsjtx-2.6.1.tgz -C unpack/

      - name: Prepare source
        run: mkdir newsrc && tar -xzvf unpack/wsjtx-2.6.1/src/wsjtx.tgz -C newsrc/

      - name: Patch WSJTX
        run: cp -R patch/* newsrc/wsjtx/

      - name: Repack source
        run: cd newsrc/ && tar -czvf wsjtx.tgz * && cd ..

      - name: Copy package
        run: cp newsrc/wsjtx.tgz unpack/wsjtx-2.6.1/src/

      - name: Generate md5sum
        run: cd unpack/wsjtx-2.6.1/src/ && md5sum wsjtx.tgz > wsjtx.tgz.md5sum

      - name: Create new archive
        run: cd unpack/ && tar -czvf wsjtx-patched-2.6.1.tgz *

      - name: Upload new patched archive
        uses: actions/upload-artifact@v2
        with:
          name: wsjtx-patched-code
          path: unpack/wsjtx-patched-2.6.1.tgz


  build_windows:
    needs: ['patch_source']
    runs-on: [ self-hosted , Windows , X64 ]
    steps:
      - name: Update execution policy
        shell: cmd
        run: powershell -Command "Set-ExecutionPolicy RemoteSigned -Scope CurrentUser"

      - name: Clear old builds outside workspace
        run: |
            if (Test-Path -Path "C:\JTSDK64-Tools\tmp\wsjtx-output\") { rm C:\JTSDK64-Tools\tmp\wsjtx-output\ -r }
            if (Test-Path -Path "C:\JTSDK64-Tools\tmp\wsjtx\") { rm C:\JTSDK64-Tools\tmp\wsjtx\ -r }

      - name: Get source code
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: wsjtx-patched-code

      - name: Unpack and prepare to compile
        run: |
            tar -xzvf .\wsjtx-patched-2.6.1.tgz
            tar -xzvf .\wsjtx-2.6.1\src\wsjtx.tgz -C C:\JTSDK64-Tools\tmp\

      - name: Check workspace
        run: dir C:\JTSDK64-Tools\tmp\

      - name: Check for JTSDK
        run: |
            cd c:\JTSDK64-Tools
            powershell -ExecutionPolicy Bypass -File .\jtsdk64_test.ps1

      - name: Upload Windows package
        uses: actions/upload-artifact@v2
        with:
          name: wsjtx-windows-package
          path: C:\JTSDK64-Tools\tmp\wsjtx-output\qt\5.15.2\2.6.1\Release\package\wsjtx-2.6.1-win64.exe


  clean_artifacts:
    needs: ['build_windows']
    runs-on: ubuntu-latest
    steps:
      - name: Delete Artifact
        uses: GeekyEggo/delete-artifact@v1.0.0
        with:
          name: |
            wsjtx-patched-code
            wsjtx-source-code
            wsjtx-windows-package

